@*model IEnumerable<BabyStore.Models.Product>*@
@model BabyStore.ViewModels.ProductIndexViewModel
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
}
<h2>Index</h2>
<p>
    @(String.IsNullOrWhiteSpace(Model.Search) ? "Showing all" : "You searched for " + Model.Search + " found" ) @Model.Products.TotalItemCount products
</p>
<p>
    @Html.ActionLink("Create New", "Create")

    @*using(Html.BeginForm("Index", "Products", FormMethod.Get))*@
    @using (Html.BeginRouteForm("ProductsIndex", FormMethod.Get)){
        <div class="form-group">
            <label>Filter by category:</label>
            @*Html.DropDownList("Category", "All")*@
            @Html.DropDownListFor(vm => vm.Category, Model.CatFilterItems, "All")

            <label>Sort By:</label>
            @Html.DropDownListFor(vm => vm.SortBy, new SelectList(Model.Sorts, "Value", "Key"), "Default")
            <input type="submit" value="Filter" />
            <input type="hidden" name="search" id="search" value="@Model.Search" /> @*ViewBag.Search*@
        </div>
    }
</p>
<table class="table">
    <tr>
        <th></th>
        <th>
            @*Html.DisplayNameFor(model => model.Category.Name)*@
            @Html.DisplayNameFor(model => model.Category)
        </th>
        <th>
            @*Html.DisplayNameFor(model => model.Name)*@
            @Html.DisplayNameFor(model => model.Products.First().Name)
        </th>
        <th>
            @*Html.DisplayNameFor(model => model.Description)*@
            @Html.DisplayNameFor(model => model.Products.First().Description)
        </th>
        <th>
            @*Html.DisplayNameFor(model => model.Price)*@
            @Html.DisplayNameFor(model => model.Products.First().Price)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model.Products) {
    <tr>
        <td>
            @if(item.ProductImageMappings != null && item.ProductImageMappings.Any())
            {
                <a href="@Url.Action("Details", new { id = item.ID })">
                    <img src="@(Url.Content(Constants.ProductImagePath) + item.ProductImageMappings.OrderBy(pim => pim.ImageNumber).ElementAt(0).ProductImage.FileName)" />
                </a>
            }
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Category.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Price)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}

</table>

<!--The PagedList Navigation Control-->
<div>
    Page @(Model.Products.PageCount < Model.Products.PageNumber? 0 : Model.Products.PageNumber) of @Model.Products.PageCount
    @Html.PagedListPager(Model.Products, page => Url.Action("Index", new { category = Model.Category, Search = Model.Search, sortBy = Model.SortBy, page }))
</div>
